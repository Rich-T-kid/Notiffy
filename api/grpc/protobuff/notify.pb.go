// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: notify.proto

package protobuff

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// textbelt status
type TXTStatus int32

const (
	TXTStatus_DELIVERED TXTStatus = 0
	TXTStatus_SENT      TXTStatus = 1
	TXTStatus_SENDING   TXTStatus = 2
	TXTStatus_FAILED    TXTStatus = 3
	TXTStatus_UNKNOWN   TXTStatus = 4
)

// Enum value maps for TXTStatus.
var (
	TXTStatus_name = map[int32]string{
		0: "DELIVERED",
		1: "SENT",
		2: "SENDING",
		3: "FAILED",
		4: "UNKNOWN",
	}
	TXTStatus_value = map[string]int32{
		"DELIVERED": 0,
		"SENT":      1,
		"SENDING":   2,
		"FAILED":    3,
		"UNKNOWN":   4,
	}
)

func (x TXTStatus) Enum() *TXTStatus {
	p := new(TXTStatus)
	*p = x
	return p
}

func (x TXTStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TXTStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_notify_proto_enumTypes[0].Descriptor()
}

func (TXTStatus) Type() protoreflect.EnumType {
	return &file_notify_proto_enumTypes[0]
}

func (x TXTStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TXTStatus.Descriptor instead.
func (TXTStatus) EnumDescriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{0}
}

// use this for when the function generally shouldnt fail and a basic status and message is enough context
// generic for both emails and sms
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "ok", "healthy", "running"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_notify_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BasicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicResponse) Reset() {
	*x = BasicResponse{}
	mi := &file_notify_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicResponse) ProtoMessage() {}

func (x *BasicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicResponse.ProtoReflect.Descriptor instead.
func (*BasicResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{1}
}

func (x *BasicResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BasicResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UserListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []string               `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserListResponse) Reset() {
	*x = UserListResponse{}
	mi := &file_notify_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResponse) ProtoMessage() {}

func (x *UserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResponse.ProtoReflect.Descriptor instead.
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{2}
}

func (x *UserListResponse) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type ErrorArray struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Errors        []string               `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"` // Array of error messages
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorArray) Reset() {
	*x = ErrorArray{}
	mi := &file_notify_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorArray) ProtoMessage() {}

func (x *ErrorArray) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorArray.ProtoReflect.Descriptor instead.
func (*ErrorArray) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorArray) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// req-resp specific
type SMSNotifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *TextMessage           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Tags          []*Tags                `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SMSNotifyRequest) Reset() {
	*x = SMSNotifyRequest{}
	mi := &file_notify_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SMSNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSNotifyRequest) ProtoMessage() {}

func (x *SMSNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSNotifyRequest.ProtoReflect.Descriptor instead.
func (*SMSNotifyRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{4}
}

func (x *SMSNotifyRequest) GetMessage() *TextMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SMSNotifyRequest) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type NotifyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notified      int64                  `protobuf:"varint,1,opt,name=notified,proto3" json:"notified,omitempty"` // Number of successful notifications
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`      // Array of error messages
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyResponse) Reset() {
	*x = NotifyResponse{}
	mi := &file_notify_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyResponse) ProtoMessage() {}

func (x *NotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyResponse.ProtoReflect.Descriptor instead.
func (*NotifyResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyResponse) GetNotified() int64 {
	if x != nil {
		return x.Notified
	}
	return 0
}

func (x *NotifyResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type SMSSendDirectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *TextMessage           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	From          string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Recipients    []string               `protobuf:"bytes,3,rep,name=recipients,proto3" json:"recipients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SMSSendDirectRequest) Reset() {
	*x = SMSSendDirectRequest{}
	mi := &file_notify_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SMSSendDirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSSendDirectRequest) ProtoMessage() {}

func (x *SMSSendDirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSSendDirectRequest.ProtoReflect.Descriptor instead.
func (*SMSSendDirectRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{6}
}

func (x *SMSSendDirectRequest) GetMessage() *TextMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SMSSendDirectRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SMSSendDirectRequest) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type EmailNotifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          *MailBody              `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Tags          *Tags                  `protobuf:"bytes,2,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailNotifyRequest) Reset() {
	*x = EmailNotifyRequest{}
	mi := &file_notify_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailNotifyRequest) ProtoMessage() {}

func (x *EmailNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailNotifyRequest.ProtoReflect.Descriptor instead.
func (*EmailNotifyRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{7}
}

func (x *EmailNotifyRequest) GetBody() *MailBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *EmailNotifyRequest) GetTags() *Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type EmailSendDirectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *MailBody              `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	From          string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Recipients    []string               `protobuf:"bytes,3,rep,name=recipients,proto3" json:"recipients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailSendDirectRequest) Reset() {
	*x = EmailSendDirectRequest{}
	mi := &file_notify_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailSendDirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSendDirectRequest) ProtoMessage() {}

func (x *EmailSendDirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSendDirectRequest.ProtoReflect.Descriptor instead.
func (*EmailSendDirectRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{8}
}

func (x *EmailSendDirectRequest) GetMessage() *MailBody {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EmailSendDirectRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EmailSendDirectRequest) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

// SMS
// go Struct: ReigsterInfo
type SMSRegisterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContactNumber int64                  `protobuf:"varint,2,opt,name=contact_number,json=contactNumber,proto3" json:"contact_number,omitempty"`
	Tags          []*Tags                `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SMSRegisterInfo) Reset() {
	*x = SMSRegisterInfo{}
	mi := &file_notify_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SMSRegisterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSRegisterInfo) ProtoMessage() {}

func (x *SMSRegisterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSRegisterInfo.ProtoReflect.Descriptor instead.
func (*SMSRegisterInfo) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{9}
}

func (x *SMSRegisterInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SMSRegisterInfo) GetContactNumber() int64 {
	if x != nil {
		return x.ContactNumber
	}
	return 0
}

func (x *SMSRegisterInfo) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

// go Struct: SMSBody
type TextMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        string                 `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Tags          *Tags                  `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	mi := &file_notify_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{10}
}

func (x *TextMessage) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *TextMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TextMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TextMessage) GetTags() *Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Tags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // sms/email/soccer ,ect
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tags) Reset() {
	*x = Tags{}
	mi := &file_notify_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tags) ProtoMessage() {}

func (x *Tags) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tags.ProtoReflect.Descriptor instead.
func (*Tags) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{11}
}

func (x *Tags) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Email
// go struct :  EmailRegisterInfo
type EmailRegisterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Tags          []*Tags                `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailRegisterInfo) Reset() {
	*x = EmailRegisterInfo{}
	mi := &file_notify_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailRegisterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRegisterInfo) ProtoMessage() {}

func (x *EmailRegisterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRegisterInfo.ProtoReflect.Descriptor instead.
func (*EmailRegisterInfo) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{12}
}

func (x *EmailRegisterInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailRegisterInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmailRegisterInfo) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

// go struct : Mailbody
type MailBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subject       string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Body          string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	To            string                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Tags          []*Tags                `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MailBody) Reset() {
	*x = MailBody{}
	mi := &file_notify_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailBody) ProtoMessage() {}

func (x *MailBody) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailBody.ProtoReflect.Descriptor instead.
func (*MailBody) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{13}
}

func (x *MailBody) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MailBody) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MailBody) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MailBody) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_notify_proto protoreflect.FileDescriptor

var file_notify_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a,
	0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x41, 0x0a, 0x0d,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x28, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x24, 0x0a, 0x0a, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22,
	0x77, 0x0a, 0x10, 0x53, 0x4d, 0x53, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x44, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x83,
	0x01, 0x0a, 0x14, 0x53, 0x4d, 0x53, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x12, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x4d, 0x61, 0x69, 0x6c,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x0f, 0x53,
	0x4d, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x1a, 0x0a, 0x04, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x11, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x74, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x2a, 0x4a, 0x0a, 0x09, 0x54, 0x58, 0x54, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x04, 0x32, 0xbe, 0x08, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x25, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x52, 0x50, 0x43, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x22, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x4d, 0x53, 0x12, 0x21, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0d, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x4d, 0x53, 0x12, 0x21, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x4d, 0x53,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x4d, 0x53, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x09, 0x53, 0x4d, 0x53, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x22, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x53,
	0x4d, 0x53, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52,
	0x50, 0x43, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x53, 0x4d, 0x53, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x53,
	0x4d, 0x53, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52,
	0x50, 0x43, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x23, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x52, 0x50, 0x43, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0f, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x1f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x52, 0x50, 0x43, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50,
	0x43, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x24, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x16, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x22, 0x00, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_notify_proto_rawDescOnce sync.Once
	file_notify_proto_rawDescData []byte
)

func file_notify_proto_rawDescGZIP() []byte {
	file_notify_proto_rawDescOnce.Do(func() {
		file_notify_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notify_proto_rawDesc), len(file_notify_proto_rawDesc)))
	})
	return file_notify_proto_rawDescData
}

var file_notify_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_notify_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_notify_proto_goTypes = []any{
	(TXTStatus)(0),                 // 0: NotificationGRPC.TXTStatus
	(*HealthCheckResponse)(nil),    // 1: NotificationGRPC.HealthCheckResponse
	(*BasicResponse)(nil),          // 2: NotificationGRPC.BasicResponse
	(*UserListResponse)(nil),       // 3: NotificationGRPC.UserListResponse
	(*ErrorArray)(nil),             // 4: NotificationGRPC.ErrorArray
	(*SMSNotifyRequest)(nil),       // 5: NotificationGRPC.SMSNotifyRequest
	(*NotifyResponse)(nil),         // 6: NotificationGRPC.NotifyResponse
	(*SMSSendDirectRequest)(nil),   // 7: NotificationGRPC.SMSSendDirectRequest
	(*EmailNotifyRequest)(nil),     // 8: NotificationGRPC.EmailNotifyRequest
	(*EmailSendDirectRequest)(nil), // 9: NotificationGRPC.EmailSendDirectRequest
	(*SMSRegisterInfo)(nil),        // 10: NotificationGRPC.SMSRegisterInfo
	(*TextMessage)(nil),            // 11: NotificationGRPC.TextMessage
	(*Tags)(nil),                   // 12: NotificationGRPC.Tags
	(*EmailRegisterInfo)(nil),      // 13: NotificationGRPC.EmailRegisterInfo
	(*MailBody)(nil),               // 14: NotificationGRPC.MailBody
	(*empty.Empty)(nil),            // 15: google.protobuf.Empty
}
var file_notify_proto_depIdxs = []int32{
	11, // 0: NotificationGRPC.SMSNotifyRequest.message:type_name -> NotificationGRPC.TextMessage
	12, // 1: NotificationGRPC.SMSNotifyRequest.tags:type_name -> NotificationGRPC.Tags
	11, // 2: NotificationGRPC.SMSSendDirectRequest.message:type_name -> NotificationGRPC.TextMessage
	14, // 3: NotificationGRPC.EmailNotifyRequest.body:type_name -> NotificationGRPC.MailBody
	12, // 4: NotificationGRPC.EmailNotifyRequest.tags:type_name -> NotificationGRPC.Tags
	14, // 5: NotificationGRPC.EmailSendDirectRequest.message:type_name -> NotificationGRPC.MailBody
	12, // 6: NotificationGRPC.SMSRegisterInfo.tags:type_name -> NotificationGRPC.Tags
	12, // 7: NotificationGRPC.TextMessage.tags:type_name -> NotificationGRPC.Tags
	12, // 8: NotificationGRPC.EmailRegisterInfo.tags:type_name -> NotificationGRPC.Tags
	12, // 9: NotificationGRPC.MailBody.tags:type_name -> NotificationGRPC.Tags
	15, // 10: NotificationGRPC.NotificationService.HealthCheck:input_type -> google.protobuf.Empty
	12, // 11: NotificationGRPC.NotificationService.ListUsers:input_type -> NotificationGRPC.Tags
	10, // 12: NotificationGRPC.NotificationService.RegisterSMS:input_type -> NotificationGRPC.SMSRegisterInfo
	10, // 13: NotificationGRPC.NotificationService.UnregisterSMS:input_type -> NotificationGRPC.SMSRegisterInfo
	10, // 14: NotificationGRPC.NotificationService.UpdateSMSRegistration:input_type -> NotificationGRPC.SMSRegisterInfo
	5,  // 15: NotificationGRPC.NotificationService.SMSNotify:input_type -> NotificationGRPC.SMSNotifyRequest
	5,  // 16: NotificationGRPC.NotificationService.SMSSendDirectMessage:input_type -> NotificationGRPC.SMSNotifyRequest
	13, // 17: NotificationGRPC.NotificationService.RegisterEmail:input_type -> NotificationGRPC.EmailRegisterInfo
	13, // 18: NotificationGRPC.NotificationService.UnregisterEmail:input_type -> NotificationGRPC.EmailRegisterInfo
	13, // 19: NotificationGRPC.NotificationService.UpdateEmailRegistration:input_type -> NotificationGRPC.EmailRegisterInfo
	8,  // 20: NotificationGRPC.NotificationService.EmailNotify:input_type -> NotificationGRPC.EmailNotifyRequest
	9,  // 21: NotificationGRPC.NotificationService.EmailSendDirectMessage:input_type -> NotificationGRPC.EmailSendDirectRequest
	1,  // 22: NotificationGRPC.NotificationService.HealthCheck:output_type -> NotificationGRPC.HealthCheckResponse
	3,  // 23: NotificationGRPC.NotificationService.ListUsers:output_type -> NotificationGRPC.UserListResponse
	2,  // 24: NotificationGRPC.NotificationService.RegisterSMS:output_type -> NotificationGRPC.BasicResponse
	2,  // 25: NotificationGRPC.NotificationService.UnregisterSMS:output_type -> NotificationGRPC.BasicResponse
	2,  // 26: NotificationGRPC.NotificationService.UpdateSMSRegistration:output_type -> NotificationGRPC.BasicResponse
	6,  // 27: NotificationGRPC.NotificationService.SMSNotify:output_type -> NotificationGRPC.NotifyResponse
	4,  // 28: NotificationGRPC.NotificationService.SMSSendDirectMessage:output_type -> NotificationGRPC.ErrorArray
	2,  // 29: NotificationGRPC.NotificationService.RegisterEmail:output_type -> NotificationGRPC.BasicResponse
	2,  // 30: NotificationGRPC.NotificationService.UnregisterEmail:output_type -> NotificationGRPC.BasicResponse
	2,  // 31: NotificationGRPC.NotificationService.UpdateEmailRegistration:output_type -> NotificationGRPC.BasicResponse
	6,  // 32: NotificationGRPC.NotificationService.EmailNotify:output_type -> NotificationGRPC.NotifyResponse
	4,  // 33: NotificationGRPC.NotificationService.EmailSendDirectMessage:output_type -> NotificationGRPC.ErrorArray
	22, // [22:34] is the sub-list for method output_type
	10, // [10:22] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_notify_proto_init() }
func file_notify_proto_init() {
	if File_notify_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notify_proto_rawDesc), len(file_notify_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notify_proto_goTypes,
		DependencyIndexes: file_notify_proto_depIdxs,
		EnumInfos:         file_notify_proto_enumTypes,
		MessageInfos:      file_notify_proto_msgTypes,
	}.Build()
	File_notify_proto = out.File
	file_notify_proto_goTypes = nil
	file_notify_proto_depIdxs = nil
}
